commit ea65e90a97fc8c9929b6a93d6c5657111489573b
Author: Matthew Brett <matthew.brett@gmail.com>
Date:   Mon Oct 19 12:40:17 2015 -0700

    RF+API: TripWireError subclasses AttributeError
    
    Make TripWireError subclass AttributeError.  This prevents the Python
    3.5 doctest machinery triggering a TripWireError when inspecting the
    module containing a TripWire instance during doctest initialization.

--- /dev/null
+++ b/nibabel/tests/test_tripwire.py
@@ -0,0 +1,29 @@
+""" Testing tripwire module
+"""
+
+from ..tripwire import TripWire, is_tripwire, TripWireError
+
+from nose import SkipTest
+from nose.tools import (assert_true, assert_false, assert_raises,
+                        assert_equal, assert_not_equal)
+
+
+def test_is_tripwire():
+    assert_false(is_tripwire(object()))
+    assert_true(is_tripwire(TripWire('some message')))
+
+
+def test_tripwire():
+    # Test tripwire object
+    silly_module_name = TripWire('We do not have silly_module_name')
+    assert_raises(TripWireError,
+                  getattr,
+                  silly_module_name,
+                  'do_silly_thing')
+    # Check AttributeError can be checked too
+    try:
+        silly_module_name.__wrapped__
+    except TripWireError as err:
+        assert_true(isinstance(err, AttributeError))
+    else:
+        raise RuntimeError("No error raised, but expected")
--- a/nibabel/tripwire.py
+++ b/nibabel/tripwire.py
@@ -1,8 +1,12 @@
 """ Class to raise error for missing modules or other misfortunes
 """
 
-class TripWireError(Exception):
+class TripWireError(AttributeError):
     """ Exception if trying to use TripWire object """
+    # Has to be subclass of AttributeError, to work round Python 3.5 inspection
+    # for doctests.  Python 3.5 looks for a ``__wrapped__`` attribute during
+    # initialization of doctests, and only allows AttributeError as signal this
+    # is not present.
 
 
 def is_tripwire(obj):
@@ -31,14 +35,11 @@ class TripWire(object):
 
     Examples
     --------
-    >>> try:
-    ...     import silly_module_name
-    ... except ImportError:
-    ...    silly_module_name = TripWire('We do not have silly_module_name')
-    >>> silly_module_name.do_silly_thing('with silly string') #doctest: +IGNORE_EXCEPTION_DETAIL
+    >>> a_module = TripWire('We do not have a_module')
+    >>> a_module.do_silly_thing('with silly string') #doctest: +IGNORE_EXCEPTION_DETAIL
     Traceback (most recent call last):
         ...
-    TripWireError: We do not have silly_module_name
+    TripWireError: We do not have a_module
     """
     def __init__(self, msg):
         self._msg = msg
--- a/Changelog
+++ b/Changelog
@@ -24,6 +24,15 @@ and Stephan Gerhard (SG).
 
 References like "pr/298" refer to github pull request numbers.
 
+* Cherry picked from development after 2.0.1 release
+
+  * tripwire.TripWire object now raises subclass of AttributeError when trying
+    to get an attribute, rather than a direct subclass of Exception.  This
+    prevents Python 3.5 triggering the tripwire when doing inspection prior to
+    running doctests.
+  * Minor API change for tripwire.TripWire object; code that checked for
+    AttributeError will now also catch TripWireError.
+
 * 2.0.1 (Saturday 27 June 2015)
 
   Contributions from Ben Cipollini, Chris Markiewicz, Alexandre Gramfort,
