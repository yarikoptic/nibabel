#!/usr/bin/make -f
# -*- mode: makefile; coding: utf-8 -*-

PYVERS = $(shell pyversions -vr)
PYVER = $(shell pyversions -vd)
PY3VERS = $(shell py3versions -vr)
PY3VER = $(shell py3versions -vd)

BINDIR=$(CURDIR)/debian/tmp/usr/bin/

# Setting MPLCONFIGDIR to please matplotlib demanding writable HOME
# on older systems (e.g. 12.04)
export MPLCONFIGDIR=$(CURDIR)/build

# one ring to rule them all ...
%:
# need to enforce distutils, since we also have a makefile
	dh $@ --buildsystem=python_distutils --builddirectory=build --with=python2,python3

override_dh_auto_build:
	dh_auto_build
	# and docs
	$(MAKE) htmldoc
	# but remove jquery copy (later on link to Debian's version)
	-rm build/html/_static/jquery.js
	# objects inventory is of no use for the package
	-rm build/html/objects.inv
	# also doc source files only consume space
	-rm -r build/html/_sources

override_dh_auto_install: ${PY3VERS:%=python-install%} ${PYVERS:%=python-install%}
python-install%:
	: # Remove those possibly installed scripts with incorrect shebangs
	rm -f $(CURDIR)/debian/tmp/usr/bin/*
	python$* setup.py install --install-layout=deb --root=$(CURDIR)/debian/tmp

# enable when we believe that the tests should pass
override_dh_auto_test: ${PYVERS:%=python-test%} ${PY3VERS:%=python-test%}

python-test%:
ifeq (,$(filter nocheck,$(DEB_BUILD_OPTIONS)))
	@echo "I: Running NiBabel unittests using python$*"
	$(MAKE) unittest PYTHON=python$*
endif

## immediately useable documentation
## and exemplar data (they are small excerpts anyway)
override_dh_compress:
	dh_compress -X.py -X.html -X.css -X.jpg -X.txt -X.js -X.json -X.rtc -X.par -X.bin

override_dh_installman:
	PYTHONPATH=build/lib:$(PYTHONPATH) help2man -N \
		-n 'convert PARREC image to NIfTI' $(BINDIR)/parrec2nii > build/parrec2nii.1
	PYTHONPATH=build/lib:$(PYTHONPATH) help2man -N \
		-n 'FUSE filesystem on top of a directory with DICOMs' $(BINDIR)/nib-dicomfs > build/nib-dicomfs.1
	PYTHONPATH=build/lib:$(PYTHONPATH) help2man -N \
		-n "'ls' for neuroimaging files" $(BINDIR)/nib-ls > build/nib-ls.1
	PYTHONPATH=build/lib:$(PYTHONPATH) help2man -N \
		-n "header diagnostic tool" $(BINDIR)/nib-nifti-dx > build/nib-nifti-dx.1

	dh_installman build/*.1

override_dh_clean:
	$(MAKE) clean
	dh_clean
